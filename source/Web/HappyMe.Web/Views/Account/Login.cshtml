@using HappyMe.Web.Models.ViewModels.Account
@using Resource = Resources.Account.Views.Login;

@model HappyMe.Web.Models.ViewModels.Account.LoginViewModel

@section styles {
    @Styles.Render("~/Content/custom/authentication.css")
}

@{
    ViewBag.Title = Resource.Title;
}

<div class="container container-holder">
    <div class="section-title-container">
        <h1 class="section-title">@ViewBag.Title</h1>
    </div>
    <div class="row">
        <div class="col-xs-12 external-login-container">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
        <div class="col-md-12">
            <section id="loginForm" class="login-form">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-sm-4 authentication-field">
                            <div class="inner-addon left-addon">
                                <i class="fa fa-user"></i>
                                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = Resource.Username_placeholder })
                            </div>
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4 authentication-field">
                            <div class="inner-addon left-addon">
                                <i class="fa fa-lock"></i>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = Resource.Password_placeholder })
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-2 authentication-field">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "check-box" })
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                        <div class="col-sm-2 authentication-field">
                            <input type="submit" value="@Resource.Login_button" class="btn btn-success btn-block"/>
                        </div>
                    </div>
                    <div class="register-buttons-login-page">
                        <p class="text-center bottom-buffer register-button-login-page">
                            @Html.ActionLink(Resource.No_registration_link, "Register")
                        </p>
                        <p class="text-center top-buffer register-button-login-page">
                            @Html.ActionLink(Resource.Forgoten_password_link, "ForgotPassword")
                        </p>
                    </div>
                }
            </section>

            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}